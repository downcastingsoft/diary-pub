#!/usr/bin/env ruby

preprocess do
  if @config[:build] != 'development'
    items.delete_if { |item| item[:publish] == false }
  end
end

compile '/article/**/*.xml' do
  layout '/xsl/ijkml.xsl'
  layout '/default.html.erb'
  filter :relativize_paths, type: :html5, select: ['*/@href']
end

compile '/draft/**/*.xml' do
  layout '/xsl/ijkml.xsl'
  layout '/draft.html.erb'
  filter :relativize_paths, type: :html5, select: ['*/@href']
end
layout '/xsl/ijkml.xsl', :xsl
layout '/**/*.erb', :erb, trim_mode: '-'

compile '/**/*.html' do
  layout '/default.html.erb'
end

compile '/**/*.css'do
  write item.identifier.to_s
end

compile '/**/*.html.erb' do
  filter :erb, trim_mode: '-'
  layout '/default.html.erb'
  filter :relativize_paths, type: :html5, select: ['*/@href']
  write item.identifier.without_ext
end

compile '/**/*.erb' do
  filter :erb, trim_mode: '-'
  write item.identifier.without_ext
end

compile '/**/*' do
end

route %r|/article/\d{4}/[^\/]+/([^\/.]+).xml| do
  d = item[:created_at]
  slug = item[:slug]
  filename = File.basename(item[:content_filename], ".xml")
  "/article/%04d/%02d/%02d/%s/%s.html" % [
    d.year, d.month, d.day, slug, filename
  ]
end

route %r[/draft/\d{4}/([^\/]+)/([^\/.]+).xml] do
  d = item[:created_at]
  slug = item[:slug]
  filename = File.basename(item[:content_filename], ".xml")
  "/draft/#{d.year}/#{slug}/#{filename}.html"
end

route '/**/*.{html,md}' do
  if item.identifier =~ '/index.*'
    '/index.html'
  else
    item.identifier.without_ext + '/index.html'
  end
end
